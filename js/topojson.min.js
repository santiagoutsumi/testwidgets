!function t(n,r,e){function o(a,u){if(!r[a]){if(!n[a]){var f="function"==typeof require&&require;if(!u&&f)return f(a,!0);if(i)return i(a,!0);var c=new Error("Cannot find module '"+a+"'");throw c.code="MODULE_NOT_FOUND",c}var s=r[a]={exports:{}};n[a][0].call(s.exports,function(t){var r=n[a][1][t];return o(r?r:t)},s,s.exports,t,n,r,e)}return r[a].exports}for(var i="function"==typeof require&&require,a=0;a<e.length;a++)o(e[a]);return o}({1:[function(n,t,r){window.topojson={topology:n("../node_modules/topojson/lib/topojson/topology"),client:n("../node_modules/topojson/topojson.js")}},{"../node_modules/topojson/lib/topojson/topology":13,"../node_modules/topojson/topojson.js":25}],2:[function(n,t,r){t.exports=function(n){function t(n){n&&c.hasOwnProperty(n.type)&&c[n.type](n)}function r(n){var t=n[0],r=n[1];i>t&&(i=t),t>u&&(u=t),a>r&&(a=r),r>f&&(f=r)}function e(n){n.forEach(r)}function o(n){n.forEach(e)}var i=1/0,a=1/0,u=-(1/0),f=-(1/0),c={GeometryCollection:function(n){n.geometries.forEach(t)},Point:function(n){r(n.coordinates)},MultiPoint:function(n){n.coordinates.forEach(r)},LineString:function(n){e(n.coordinates)},MultiLineString:function(n){n.coordinates.forEach(e)},Polygon:function(n){n.coordinates.forEach(e)},MultiPolygon:function(n){n.coordinates.forEach(o)}};for(var s in n)t(n[s]);return[i,a,u,f]}},{}],3:[function(n,t,r){function e(n){return n.toString()}function o(n){for(var t,r=-1,e=n.length,o=n[e-1],i=0;++r<e;)t=o,o=n[r],i+=t[0]*o[1]-t[1]*o[0];return.5*i}function i(n){return Math.abs((n[0][0]-n[2][0])*(n[1][1]-n[0][1])-(n[0][0]-n[1][0])*(n[2][1]-n[0][1]))}function a(n,t,r,e){var o=n-r,i=t-e;return Math.sqrt(o*o+i*i)}r.name="cartesian",r.formatDistance=e,r.ringArea=o,r.absoluteArea=Math.abs,r.triangleArea=i,r.distance=a},{}],4:[function(n,t,r){t.exports=function(n,t){function r(n){n&&o.hasOwnProperty(n.type)&&o[n.type](n)}function e(n){var r=t(n);null==r?delete n.id:n.id=r}arguments.length<2&&(t=function(n){return n.id});var o={Feature:e,FeatureCollection:function(n){n.features.forEach(e)}};for(var i in n)r(n[i]);return n}},{}],5:[function(n,t,r){t.exports={cartesian:n("./cartesian"),spherical:n("./spherical")}},{"./cartesian":3,"./spherical":11}],6:[function(n,t,r){t.exports=function(n){for(var t=n.arcs,r=-1,e=t.length;++r<e;)for(var o,i,a=t[r],u=0,f=a.length,c=a[0],s=c[0],l=c[1];++u<f;)c=a[u],o=c[0],i=c[1],a[u]=[o-s,i-l],s=o,l=i;return n}},{}],7:[function(n,t,r){t.exports=function(n){function t(n){return(n&&o.hasOwnProperty(n.type)?o[n.type]:e)(n)}function r(n){var t=n.geometry;return null==t?n.type=null:(e(t),n.type=t.type,t.geometries?n.geometries=t.geometries:t.coordinates&&(n.coordinates=t.coordinates)),delete n.geometry,n}function e(n){return n?(i.hasOwnProperty(n.type)&&i[n.type](n),n):{type:null}}var o={Feature:r,FeatureCollection:function(n){return n.type="GeometryCollection",n.geometries=n.features,n.features.forEach(r),delete n.features,n}},i={GeometryCollection:function(n){for(var t=n.geometries,r=-1,o=t.length;++r<o;)t[r]=e(t[r])},MultiPoint:function(n){n.coordinates.length?n.coordinates.length<2&&(n.type="Point",n.coordinates=n.coordinates[0]):(n.type=null,delete n.coordinates)},LineString:function(n){n.coordinates.length||(n.type=null,delete n.coordinates)},MultiLineString:function(n){for(var t=n.coordinates,r=0,e=0,o=t.length;o>r;++r){var i=t[r];i.length&&(t[e++]=i)}e?2>e?(n.type="LineString",n.coordinates=t[0]):n.coordinates.length=e:(n.type=null,delete n.coordinates)},Polygon:function(n){for(var t=n.coordinates,r=0,e=0,o=t.length;o>r;++r){var i=t[r];i.length&&(t[e++]=i)}e?n.coordinates.length=e:(n.type=null,delete n.coordinates)},MultiPolygon:function(n){for(var t=n.coordinates,r=0,e=0,o=t.length;o>r;++r){for(var i=t[r],a=0,u=0,f=i.length;f>a;++a){var c=i[a];c.length&&(i[u++]=c)}u&&(i.length=u,t[e++]=i)}e?2>e?(n.type="Polygon",n.coordinates=t[0]):t.length=e:(n.type=null,delete n.coordinates)}};for(var a in n)n[a]=t(n[a]);return n}},{}],8:[function(n,t,r){var e=n("./quantize");t.exports=function(n,t,r){function o(n){n&&g.hasOwnProperty(n.type)&&g[n.type](n)}if(t){if(r===t||!n.bbox.every(isFinite))return n;var i=r/t,a=e(0,0,i,i);n.transform.scale[0]/=i,n.transform.scale[1]/=i}else{var u=n.bbox,f=isFinite(u[0])?u[0]:0,c=isFinite(u[1])?u[1]:0,s=isFinite(u[2])?u[2]:0,l=isFinite(u[3])?u[3]:0,h=s-f?(r-1)/(s-f):1,p=l-c?(r-1)/(l-c):1,a=e(-f,-c,h,p);n.transform=a.transform}var g={GeometryCollection:function(n){n.geometries.forEach(o)},Point:function(n){a.point(n.coordinates)},MultiPoint:function(n){n.coordinates.forEach(a.point)}};for(var v in n.objects)o(n.objects[v]);return n.arcs=n.arcs.map(function(n){return a.line(n=n.map(function(n){return n.slice()})),n.length<2&&n.push(n[0]),n}),n}},{"./quantize":10}],9:[function(n,t,r){var e=n("./quantize");t.exports=function(n,t,r,o){function i(n){n&&p.hasOwnProperty(n.type)&&p[n.type](n)}arguments.length<4&&(o=r);var a=isFinite(t[0])?t[0]:0,u=isFinite(t[1])?t[1]:0,f=isFinite(t[2])?t[2]:0,c=isFinite(t[3])?t[3]:0,s=f-a?(o-1)/(f-a)*r/o:1,l=c-u?(o-1)/(c-u)*r/o:1,h=e(-a,-u,s,l),p={GeometryCollection:function(n){n.geometries.forEach(i)},Point:function(n){h.point(n.coordinates)},MultiPoint:function(n){n.coordinates.forEach(h.point)},LineString:function(n){var t=n.coordinates;h.line(t),t.length<2&&(t[1]=t[0])},MultiLineString:function(n){for(var t=n.coordinates,r=0,e=t.length;e>r;++r){var o=t[r];h.line(o),o.length<2&&(o[1]=o[0])}},Polygon:function(n){for(var t=n.coordinates,r=0,e=t.length;e>r;++r){var o=t[r];for(h.line(o);o.length<4;)o.push(o[0])}},MultiPolygon:function(n){for(var t=n.coordinates,r=0,e=t.length;e>r;++r)for(var o=t[r],i=0,a=o.length;a>i;++i){var u=o[i];for(h.line(u);u.length<4;)u.push(u[0])}}};for(var g in n)i(n[g]);return h.transform}},{"./quantize":10}],10:[function(n,t,r){t.exports=function(n,t,r,e){function o(o){return o[0]=Math.round((o[0]+n)*r),o[1]=Math.round((o[1]+t)*e),o}function i(n){for(var t,r,e,i=0,a=1,u=n.length,f=o(n[0]),c=f[0],s=f[1];++i<u;)f=o(n[i]),r=f[0],e=f[1],(r!==c||e!==s)&&(t=n[a++],t[0]=c=r,t[1]=s=e);n.length=a}return{point:o,line:i,transform:{scale:[1/r,1/e],translate:[-n,-t]}}}},{}],11:[function(n,t,r){function e(n){var t=n*h*6371;return(t>1?t.toFixed(3)+"km":(1e3*t).toPrecision(3)+"m")+" ("+n.toPrecision(3)+"Â°)"}function o(n){if(!n.length)return 0;for(var t=0,r=n[0],e=r[0]*h,o=r[1]*h/2+l,i=e,a=Math.cos(o),u=Math.sin(o),f=1,c=n.length;c>f;++f){r=n[f],e=r[0]*h,o=r[1]*h/2+l;var p=e-i,g=Math.cos(o),v=Math.sin(o),d=u*v,y=a*g+d*Math.cos(p),m=d*Math.sin(p);t+=Math.atan2(m,y),i=e,a=g,u=v}return 2*(t>s?t-2*s:-s>t?t+2*s:t)}function i(n){return 0>n?n+4*s:n}function a(n){var t=u(n[0],n[1]),r=u(n[1],n[2]),e=u(n[2],n[0]),o=(t+r+e)/2;return 4*Math.atan(Math.sqrt(Math.max(0,Math.tan(o/2)*Math.tan((o-t)/2)*Math.tan((o-r)/2)*Math.tan((o-e)/2))))}function u(n,t){var r,e=(t[0]-n[0])*h,o=Math.sin(e),i=Math.cos(e),a=Math.sin(n[1]*h),u=Math.cos(n[1]*h),f=Math.sin(t[1]*h),c=Math.cos(t[1]*h);return Math.atan2(Math.sqrt((r=c*o)*r+(r=u*f-a*c*i)*r),a*f+u*c*i)}function f(n,t,r,e){return n*=h,t*=h,r*=h,e*=h,2*Math.asin(Math.sqrt(c(e-t)+Math.cos(t)*Math.cos(e)*c(r-n)))}function c(n){return(n=Math.sin(n/2))*n}var s=Math.PI,l=s/4,h=s/180;r.name="spherical",r.formatDistance=e,r.ringArea=o,r.absoluteArea=i,r.triangleArea=a,r.distance=f},{}],12:[function(n,t,r){var e=n("./type");t.exports=function(n,t){function r(n){return l>=n?[0,s]:n>=p?[0,h]:[a,n]}function o(n){for(var t=[],e=0,o=n.length;o>e;++e){for(var i=n[e],a=0,f=i.length;f>a;++a){var s=i[a];s.polygon=i,t.push(s);for(var h=0,g=s.length;g>h;++h){var v=s[h],d=v[0],y=v[1];if(u>=d||d>=c||l>=y||y>=p){for(var m=h+1;g>m;++m){var M=s[m],P=M[0],x=M[1];if(P>u&&c>P&&x>l&&p>x)break}if(m===h+1)continue;if(h){var E=s.slice(0,h+1);E.polygon=i,E[E.length-1]=r(y),t[t.length-1]=E}else t.pop();if(m>=g)break;t.push(s=s.slice(m-1)),s[0]=r(s[0][1]),s.polygon=i,h=-1,g=s.length}}}i.length=0}for(var w={},b={},h=0,g=t.length;g>h;++h){var q=t[h],j=q[0],F=q[q.length-1];j[0]!==F[0]||j[1]!==F[1]?(q.index=h,w[j]=b[F]=q):(q.polygon.push(q),t[h]=null)}for(var h=0;g>h;++h){var q=t[h];if(q){var j=q[0],F=q[q.length-1],L=b[j],S=w[F];if(delete w[j],delete b[F],j[0]===F[0]&&j[1]===F[1]){q.polygon.push(q);continue}L?(delete b[j],delete w[L[0]],L.pop(),t[L.index]=null,q=L.concat(q),q.polygon=L.polygon,L===S?q.polygon.push(q):(q.index=g++,t.push(w[q[0]]=b[q[q.length-1]]=q))):S?(delete w[F],delete b[S[S.length-1]],q.pop(),q=q.concat(S),q.polygon=S.polygon,q.index=g++,t[S.index]=null,t.push(w[q[0]]=b[q[q.length-1]]=q)):(q.push(q[0]),q.polygon.push(q))}}}var i=.01,a=-180,u=a+i,f=180,c=f-i,s=-90,l=s+i,h=90,p=h-i;if(t){var g=t.scale[0],v=t.scale[1],d=t.translate[0],y=t.translate[1];a=Math.round((a-d)/g),f=Math.round((f-d)/g),s=Math.round((s-y)/v),h=Math.round((h-y)/v),u=Math.round((u-d)/g),c=Math.round((c-d)/g),l=Math.round((l-y)/v),p=Math.round((p-y)/v)}var m=e({Polygon:function(n){o([n.coordinates])},MultiPolygon:function(n){o(n.coordinates)}});for(var M in n)m.object(n[M])}},{"./type":24}],13:[function(n,t,r){var e=(n("./type"),n("./stitch")),o=n("./coordinate-systems"),i=n("./topology/index"),a=n("./delta"),u=n("./geomify"),f=n("./pre-quantize"),c=n("./post-quantize"),s=n("./bounds"),l=n("./compute-id"),h=n("./transform-properties"),p=1e-6;t.exports=function(n,t){var r,g=1e4,v=1e4,d=function(n){return n.id},y=function(){},m=0,M=!0,P=!1,x=null;if(t&&("verbose"in t&&(P=!!t.verbose),"stitch-poles"in t&&(M=!!t["stitch-poles"]),"coordinate-system"in t&&(x=o[t["coordinate-system"]]),"minimum-area"in t&&(m=+t["minimum-area"]),"quantization"in t&&(g=v=+t.quantization),"pre-quantization"in t&&(g=+t["pre-quantization"]),"post-quantization"in t&&(v=+t["post-quantization"]),"id"in t&&(d=t.id),"property-transform"in t&&(y=t["property-transform"])),g/v%1)throw new Error("post-quantization is not a divisor of pre-quantization");if(g&&!v)throw new Error("post-quantization is required when input is already quantized");l(n,d),h(n,y),u(n);var E=s(n),w=E[0]<-180-p||E[1]<-90-p||E[2]>180+p||E[3]>90+p;if(x||(x=o[w?"cartesian":"spherical"],t&&(t["coordinate-system"]=x.name)),x===o.spherical){if(w)throw new Error("spherical coordinates outside of [Â±180Â°, Â±90Â°]");E[0]<-180+p&&(E[0]=-180),E[1]<-90+p&&(E[1]=-90),E[2]>180-p&&(E[2]=180),E[3]>90-p&&(E[3]=90)}P&&console.warn("bounds: "+E.join(" ")+" ("+x.name+")"),g&&(r=f(n,E,g,v),P&&console.warn("pre-quantization: "+r.scale.map(function(n){return x.formatDistance(n)}).join(" "))),x===o.spherical&&M&&e(n,r);var b=i(n);return g&&(b.transform=r),b.bbox=E,P&&console.warn("topology: "+b.arcs.length+" arcs, "+b.arcs.reduce(function(n,t){return n+t.length},0)+" points"),v&&v!==g&&(c(b,g,v),r=b.transform,P&&console.warn("post-quantization: "+r.scale.map(function(n){return x.formatDistance(n)}).join(" "))),v&&a(b),b}},{"./bounds":2,"./compute-id":4,"./coordinate-systems":5,"./delta":6,"./geomify":7,"./post-quantize":8,"./pre-quantize":9,"./stitch":12,"./topology/index":19,"./transform-properties":23,"./type":24}],14:[function(n,t,r){function e(n,t,r,e){o(n,t,r),o(n,t,t+e),o(n,t+e,r)}function o(n,t,r){for(var e,o=t+(r-- -t>>1);o>t;++t,--r)e=n[t],n[t]=n[r],n[r]=e}var i=n("./join");t.exports=function(n){for(var t=i(n),r=n.coordinates,o=n.lines,a=n.rings,u=0,f=o.length;f>u;++u)for(var c=o[u],s=c[0],l=c[1];++s<l;)if(t.has(r[s])){var h={0:s,1:c[1]};c[1]=s,c=c.next=h}for(var u=0,f=a.length;f>u;++u)for(var p=a[u],g=p[0],v=g,d=p[1],y=t.has(r[g]);++v<d;)if(t.has(r[v]))if(y){var h={0:v,1:p[1]};p[1]=v,p=p.next=h}else e(r,g,d,d-v),r[d]=r[g],y=!0,v=g;return n}},{"./join":20}],15:[function(n,t,r){var e=(n("./join"),n("./hashmap")),o=n("./point-hash"),i=n("./point-equal");t.exports=function(n){function t(n){var t,r,e,o;if(e=M.get(t=l[n[0]]))for(var i=0,f=e.length;f>i;++i){var c=e[i];if(a(c,n))return n[0]=c[0],void(n[1]=c[1])}if(o=M.get(r=l[n[1]]))for(var i=0,f=o.length;f>i;++i){var s=o[i];if(u(s,n))return n[1]=s[0],void(n[0]=s[1])}e?e.push(n):M.set(t,[n]),o?o.push(n):M.set(r,[n]),P.push(n)}function r(n){var t,r;if(r=M.get(t=l[n[0]]))for(var e=0,o=r.length;o>e;++e){var i=r[e];if(f(i,n))return n[0]=i[0],void(n[1]=i[1]);if(c(i,n))return n[0]=i[1],void(n[1]=i[0])}if(r=M.get(t=l[n[0]+s(n)]))for(var e=0,o=r.length;o>e;++e){var i=r[e];if(f(i,n))return n[0]=i[0],void(n[1]=i[1]);if(c(i,n))return n[0]=i[1],void(n[1]=i[0])}r?r.push(n):M.set(t,[n]),P.push(n)}function a(n,t){var r=n[0],e=t[0],o=n[1],a=t[1];if(r-o!==e-a)return!1;for(;o>=r;++r,++e)if(!i(l[r],l[e]))return!1;return!0}function u(n,t){var r=n[0],e=t[0],o=n[1],a=t[1];if(r-o!==e-a)return!1;for(;o>=r;++r,--a)if(!i(l[r],l[a]))return!1;return!0}function f(n,t){var r=n[0],e=t[0],o=n[1],a=t[1],u=o-r;if(u!==a-e)return!1;for(var f=s(n),c=s(t),h=0;u>h;++h)if(!i(l[r+(h+f)%u],l[e+(h+c)%u]))return!1;return!0}function c(n,t){var r=n[0],e=t[0],o=n[1],a=t[1],u=o-r;if(u!==a-e)return!1;for(var f=s(n),c=u-s(t),h=0;u>h;++h)if(!i(l[r+(h+f)%u],l[a-(h+c)%u]))return!1;return!0}function s(n){for(var t=n[0],r=n[1],e=t,o=e,i=l[e];++e<r;){var a=l[e];(a[0]<i[0]||a[0]===i[0]&&a[1]<i[1])&&(o=e,i=a)}return o-t}var l=n.coordinates,h=n.lines,p=n.rings,g=h.length+p.length;delete n.lines,delete n.rings;for(var v=0,d=h.length;d>v;++v)for(var y=h[v];y=y.next;)++g;for(var v=0,d=p.length;d>v;++v)for(var m=p[v];m=m.next;)++g;for(var M=e(2*g*1.4,o,i),P=n.arcs=[],v=0,d=h.length;d>v;++v){var y=h[v];do t(y);while(y=y.next)}for(var v=0,d=p.length;d>v;++v){var m=p[v];if(m.next){do t(m);while(m=m.next)}else r(m)}return n}},{"./hashmap":17,"./join":20,"./point-equal":21,"./point-hash":22}],16:[function(n,t,r){t.exports=function(n){function t(n){n&&c.hasOwnProperty(n.type)&&c[n.type](n)}function r(n){for(var t=0,r=n.length;r>t;++t)f[++i]=n[t];var e={0:i-r+1,1:i};return a.push(e),e}function e(n){for(var t=0,r=n.length;r>t;++t)f[++i]=n[t];var e={0:i-r+1,1:i};return u.push(e),e}function o(n){return n.map(e)}var i=-1,a=[],u=[],f=[],c={GeometryCollection:function(n){n.geometries.forEach(t)},LineString:function(n){n.arcs=r(n.coordinates),delete n.coordinates},MultiLineString:function(n){n.arcs=n.coordinates.map(r),delete n.coordinates},Polygon:function(n){n.arcs=n.coordinates.map(e),delete n.coordinates},MultiPolygon:function(n){n.arcs=n.coordinates.map(o),delete n.coordinates}};for(var s in n)t(n[s]);return{type:"Topology",coordinates:f,lines:a,rings:u,objects:n}}},{}],17:[function(n,t,r){t.exports=function(n,t,r,e,o,i){function a(e,i){for(var a=t(e)&h,u=s[a],f=0;u!=o;){if(r(u,e))return l[a]=i;if(++f>=n)throw new Error("full hashmap");u=s[a=a+1&h]}return s[a]=e,l[a]=i,--p,i}function u(e,i){for(var a=t(e)&h,u=s[a],f=0;u!=o;){if(r(u,e))return l[a];if(++f>=n)throw new Error("full hashmap");u=s[a=a+1&h]}return s[a]=e,l[a]=i,--p,i}function f(e,i){for(var a=t(e)&h,u=s[a],f=0;u!=o;){if(r(u,e))return l[a];if(++f>=n)break;u=s[a=a+1&h]}return i}function c(){for(var n=[],t=0,r=s.length;r>t;++t){var e=s[t];e!=o&&n.push(e)}return n}3===arguments.length&&(e=i=Array,o=null);for(var s=new e(n=1<<Math.max(4,Math.ceil(Math.log(n)/Math.LN2))),l=new i(n),h=n-1,p=n,g=0;n>g;++g)s[g]=o;return{set:a,maybeSet:u,get:f,keys:c}}},{}],18:[function(n,t,r){t.exports=function(n,t,r,e,o){function i(e){for(var i=t(e)&c,a=f[i],u=0;a!=o;){if(r(a,e))return!0;if(++u>=n)throw new Error("full hashset");a=f[i=i+1&c]}return f[i]=e,--s,!0}function a(e){for(var i=t(e)&c,a=f[i],u=0;a!=o;){if(r(a,e))return!0;if(++u>=n)break;a=f[i=i+1&c]}return!1}function u(){for(var n=[],t=0,r=f.length;r>t;++t){var e=f[t];e!=o&&n.push(e)}return n}3===arguments.length&&(e=Array,o=null);for(var f=new e(n=1<<Math.max(4,Math.ceil(Math.log(n)/Math.LN2))),c=n-1,s=n,l=0;n>l;++l)f[l]=o;return{add:i,has:a,values:u}}},{}],19:[function(n,t,r){function e(n){var t,r=n[0],e=n[1];return r>e&&(t=r,r=e,e=t),r+31*e}function o(n,t){var r,e=n[0],o=n[1],i=t[0],a=t[1];return e>o&&(r=e,e=o,o=r),i>a&&(r=i,i=a,a=r),e===i&&o===a}var i=n("./hashmap"),a=n("./extract"),u=n("./cut"),f=n("./dedup");t.exports=function(n){function t(n){n&&p.hasOwnProperty(n.type)&&p[n.type](n)}function r(n){var t=[];do{var r=h.get(n);t.push(n[0]<n[1]?r:~r)}while(n=n.next);return t}function c(n){return n.map(r)}var s=f(u(a(n))),l=s.coordinates,h=i(1.4*s.arcs.length,e,o);n=s.objects,s.arcs=s.arcs.map(function(n,t){return h.set(n,t),l.slice(n[0],n[1]+1)}),delete s.coordinates,l=null;var p={GeometryCollection:function(n){n.geometries.forEach(t)},LineString:function(n){n.arcs=r(n.arcs)},MultiLineString:function(n){n.arcs=n.arcs.map(r)},Polygon:function(n){n.arcs=n.arcs.map(r)},MultiPolygon:function(n){n.arcs=n.arcs.map(c)}};for(var g in n)t(n[g]);return s}},{"./cut":14,"./dedup":15,"./extract":16,"./hashmap":17}],20:[function(n,t,r){var e=n("./hashset"),o=n("./hashmap"),i=n("./point-hash"),a=n("./point-equal");t.exports=function(n){function t(n,t,r,e){if(p[r]!==n){p[r]=n;var o=g[r];if(o>=0){var i=v[r];o===t&&i===e||o===e&&i===t||(++y,d[r]=1)}else g[r]=t,v[r]=e}}function r(){for(var n=o(1.4*c.length,u,f,Int32Array,-1,Int32Array),t=new Int32Array(c.length),r=0,e=c.length;e>r;++r)t[r]=n.maybeSet(r,r);return t}function u(n){return i(c[n])}function f(n,t){return a(c[n],c[t])}for(var c=n.coordinates,s=n.lines,l=n.rings,h=r(),p=new Int32Array(c.length),g=new Int32Array(c.length),v=new Int32Array(c.length),d=new Int8Array(c.length),y=0,m=0,M=c.length;M>m;++m)p[m]=g[m]=v[m]=-1;for(var m=0,M=s.length;M>m;++m){var P,x=s[m],E=x[0],w=x[1],b=h[E],q=h[++E];for(++y,d[b]=1;++E<=w;)t(m,P=b,b=q,q=h[E]);++y,d[q]=1}for(var m=0,M=c.length;M>m;++m)p[m]=-1;for(var m=0,M=l.length;M>m;++m){var j=l[m],F=j[0]+1,L=j[1],P=h[L-1],b=h[F-1],q=h[F];for(t(m,P,b,q);++F<=L;)t(m,P=b,b=q,q=h[F])}p=g=v=null;for(var S,z=e(1.4*y,i,a),m=0,M=c.length;M>m;++m)d[S=h[m]]&&z.add(c[S]);return z}},{"./hashmap":17,"./hashset":18,"./point-equal":21,"./point-hash":22}],21:[function(n,t,r){t.exports=function(n,t){return n[0]===t[0]&&n[1]===t[1]}},{}],22:[function(n,t,r){var e=new ArrayBuffer(16),o=new Float64Array(e),i=new Uint32Array(e);t.exports=function(n){o[0]=n[0],o[1]=n[1];var t=i[0]^i[1];return t=t<<5^t>>7^i[2]^i[3],2147483647&t}},{}],23:[function(n,t,r){t.exports=function(n,t){function r(n){n&&o.hasOwnProperty(n.type)&&o[n.type](n)}function e(n){null==n.properties&&(n.properties={});var r=n.properties=t(n);if(r)for(var e in r)return;delete n.properties}arguments.length<2&&(t=function(){});var o={Feature:e,FeatureCollection:function(n){n.features.forEach(e)}};for(var i in n)r(n[i]);return n}},{}],24:[function(n,t,r){t.exports=function(n){for(var t in e)t in n||(n[t]=e[t]);return n.defaults=e,n};var e={Feature:function(n){n.geometry&&this.geometry(n.geometry)},FeatureCollection:function(n){for(var t=n.features,r=-1,e=t.length;++r<e;)this.Feature(t[r])},GeometryCollection:function(n){for(var t=n.geometries,r=-1,e=t.length;++r<e;)this.geometry(t[r])},LineString:function(n){this.line(n.coordinates)},MultiLineString:function(n){for(var t=n.coordinates,r=-1,e=t.length;++r<e;)this.line(t[r])},MultiPoint:function(n){for(var t=n.coordinates,r=-1,e=t.length;++r<e;)this.point(t[r])},MultiPolygon:function(n){for(var t=n.coordinates,r=-1,e=t.length;++r<e;)this.polygon(t[r])},Point:function(n){this.point(n.coordinates)},Polygon:function(n){this.polygon(n.coordinates)},object:function(n){return null==n?null:i.hasOwnProperty(n.type)?this[n.type](n):this.geometry(n)},geometry:function(n){return null==n?null:o.hasOwnProperty(n.type)?this[n.type](n):null},point:function(){},line:function(n){for(var t=-1,r=n.length;++t<r;)this.point(n[t])},polygon:function(n){for(var t=-1,r=n.length;++t<r;)this.line(n[t])}},o={LineString:1,MultiLineString:1,MultiPoint:1,MultiPolygon:1,Point:1,Polygon:1,GeometryCollection:1},i={Feature:1,FeatureCollection:1}},{}],25:[function(t,r,e){!function(){function t(n,t){function r(t){var r,e=n.arcs[0>t?~t:t],o=e[0];return n.transform?(r=[0,0],e.forEach(function(n){r[0]+=n[0],r[1]+=n[1]})):r=e[e.length-1],0>t?[r,o]:[o,r]}function e(n,t){for(var r in n){var e=n[r];delete t[e.start],delete e.start,delete e.end,e.forEach(function(n){o[0>n?~n:n]=1}),u.push(e)}}var o={},i={},a={},u=[],f=-1;return t.forEach(function(r,e){var o,i=n.arcs[0>r?~r:r];i.length<3&&!i[1][0]&&!i[1][1]&&(o=t[++f],t[f]=r,t[e]=o)}),t.forEach(function(n){var t,e,o=r(n),u=o[0],f=o[1];if(t=a[u])if(delete a[t.end],t.push(n),t.end=f,e=i[f]){delete i[e.start];var c=e===t?t:t.concat(e);i[c.start=t.start]=a[c.end=e.end]=c}else i[t.start]=a[t.end]=t;else if(t=i[f])if(delete i[t.start],t.unshift(n),t.start=u,e=a[u]){delete a[e.end];var s=e===t?t:e.concat(t);i[s.start=e.start]=a[s.end=t.end]=s}else i[t.start]=a[t.end]=t;else t=[n],i[t.start=u]=a[t.end=f]=t}),e(a,i),e(i,a),t.forEach(function(n){o[0>n?~n:n]||u.push([n])}),u}function e(n,r,e){function o(n){var t=0>n?~n:n;(s[t]||(s[t]=[])).push({i:n,g:c})}function i(n){n.forEach(o)}function a(n){n.forEach(i)}function u(n){"GeometryCollection"===n.type?n.geometries.forEach(u):n.type in l&&(c=n,l[n.type](n.arcs))}var f=[];if(arguments.length>1){var c,s=[],l={LineString:i,MultiLineString:a,Polygon:a,MultiPolygon:function(n){n.forEach(a)}};u(r),s.forEach(arguments.length<3?function(n){f.push(n[0].i)}:function(n){e(n[0].g,n[n.length-1].g)&&f.push(n[0].i)})}else for(var h=0,p=n.arcs.length;p>h;++h)f.push(h);return{type:"MultiLineString",arcs:t(n,f)}}function o(r,e){function o(n){n.forEach(function(t){t.forEach(function(t){(a[t=0>t?~t:t]||(a[t]=[])).push(n)})}),f.push(n)}function i(n){return h(u(r,{type:"Polygon",arcs:[n]}).coordinates[0])>0}var a={},f=[],c=[];return e.forEach(function(n){"Polygon"===n.type?o(n.arcs):"MultiPolygon"===n.type&&n.arcs.forEach(o)}),f.forEach(function(n){if(!n._){var t=[],r=[n];for(n._=1,c.push(t);n=r.pop();)t.push(n),n.forEach(function(n){n.forEach(function(n){a[0>n?~n:n].forEach(function(n){n._||(n._=1,r.push(n))})})})}}),f.forEach(function(n){delete n._}),{type:"MultiPolygon",arcs:c.map(function(e){var o=[];if(e.forEach(function(n){n.forEach(function(n){n.forEach(function(n){a[0>n?~n:n].length<2&&o.push(n)})})}),o=t(r,o),(n=o.length)>1)for(var u,f=i(e[0][0]),c=0;c<n;++c)if(f===i(o[c])){u=o[0],o[0]=o[c],o[c]=u;break}return o})}}function i(n,t){return"GeometryCollection"===t.type?{type:"FeatureCollection",features:t.geometries.map(function(t){return a(n,t)})}:a(n,t)}function a(n,t){var r={type:"Feature",id:t.id,properties:t.properties||{},geometry:u(n,t)};return null==t.id&&delete r.id,r}function u(n,t){function r(n,t){t.length&&t.pop();for(var r,e=s[0>n?~n:n],o=0,i=e.length;i>o;++o)t.push(r=e[o].slice()),c(r,o);0>n&&f(t,i)}function e(n){return n=n.slice(),c(n,0),n}function o(n){for(var t=[],e=0,o=n.length;o>e;++e)r(n[e],t);return t.length<2&&t.push(t[0].slice()),t}function i(n){for(var t=o(n);t.length<4;)t.push(t[0].slice());return t}function a(n){return n.map(i)}function u(n){var t=n.type;return"GeometryCollection"===t?{type:t,geometries:n.geometries.map(u)}:t in l?{type:t,coordinates:l[t](n)}:null}var c=d(n.transform),s=n.arcs,l={Point:function(n){return e(n.coordinates)},MultiPoint:function(n){return n.coordinates.map(e)},LineString:function(n){return o(n.arcs)},MultiLineString:function(n){return n.arcs.map(o)},Polygon:function(n){return a(n.arcs)},MultiPolygon:function(n){return n.arcs.map(a)}};return u(t)}function f(n,t){for(var r,e=n.length,o=e-t;o<--e;)r=n[o],n[o++]=n[e],n[e]=r}function c(n,t){for(var r=0,e=n.length;e>r;){var o=r+e>>>1;n[o]<t?r=o+1:e=o}return r}function s(n){function t(n,t){n.forEach(function(n){0>n&&(n=~n);var r=o[n];r?r.push(t):o[n]=[t]})}function r(n,r){n.forEach(function(n){t(n,r)})}function e(n,t){"GeometryCollection"===n.type?n.geometries.forEach(function(n){e(n,t)}):n.type in a&&a[n.type](n.arcs,t)}var o={},i=n.map(function(){return[]}),a={LineString:t,MultiLineString:r,Polygon:r,MultiPolygon:function(n,t){n.forEach(function(n){r(n,t)})}};n.forEach(e);for(var u in o)for(var f=o[u],s=f.length,l=0;s>l;++l)for(var h=l+1;s>h;++h){var p,g=f[l],v=f[h];(p=i[g])[u=c(p,v)]!==v&&p.splice(u,0,v),(p=i[v])[u=c(p,g)]!==g&&p.splice(u,0,g)}return i}function l(n,t){function r(n){i.remove(n),n[1][2]=t(n),i.push(n)}var e=d(n.transform),o=y(n.transform),i=v();return t||(t=p),n.arcs.forEach(function(n){for(var a,u,f=[],c=0,s=0,l=n.length;l>s;++s)u=n[s],e(n[s]=[u[0],u[1],1/0],s);for(var s=1,l=n.length-1;l>s;++s)a=n.slice(s-1,s+2),a[1][2]=t(a),f.push(a),i.push(a);for(var s=0,l=f.length;l>s;++s)a=f[s],a.previous=f[s-1],a.next=f[s+1];for(;a=i.pop();){var h=a.previous,p=a.next;a[1][2]<c?a[1][2]=c:c=a[1][2],h&&(h.next=p,h[2]=a[2],r(h)),p&&(p.previous=h,p[0]=a[0],r(p))}n.forEach(o)}),n}function h(n){for(var t,r=-1,e=n.length,o=n[e-1],i=0;++r<e;)t=o,o=n[r],i+=t[0]*o[1]-t[1]*o[0];return.5*i}function p(n){var t=n[0],r=n[1],e=n[2];return Math.abs((t[0]-e[0])*(r[1]-t[1])-(t[0]-r[0])*(e[1]-t[1]))}function g(n,t){return n[1][2]-t[1][2]}function v(){function n(n,t){for(;t>0;){var r=(t+1>>1)-1,o=e[r];if(g(n,o)>=0)break;e[o._=t]=o,e[n._=t=r]=n}}function t(n,t){for(;;){var r=t+1<<1,i=r-1,a=t,u=e[a];if(o>i&&g(e[i],u)<0&&(u=e[a=i]),o>r&&g(e[r],u)<0&&(u=e[a=r]),a===t)break;e[u._=t]=u,e[n._=t=a]=n}}var r={},e=[],o=0;return r.push=function(t){return n(e[t._=o]=t,o++),o},r.pop=function(){if(!(0>=o)){var n,r=e[0];return--o>0&&(n=e[o],t(e[n._=0]=n,0)),r}},r.remove=function(r){var i,a=r._;if(e[a]===r)return a!==--o&&(i=e[o],(g(i,r)<0?n:t)(e[i._=a]=i,a)),a},r}function d(n){if(!n)return m;var t,r,e=n.scale[0],o=n.scale[1],i=n.translate[0],a=n.translate[1];return function(n,u){u||(t=r=0),n[0]=(t+=n[0])*e+i,n[1]=(r+=n[1])*o+a}}function y(n){if(!n)return m;var t,r,e=n.scale[0],o=n.scale[1],i=n.translate[0],a=n.translate[1];return function(n,u){u||(t=r=0);var f=(n[0]-i)/e|0,c=(n[1]-a)/o|0;n[0]=f-t,n[1]=c-r,t=f,r=c}}function m(){}var M={version:"1.6.19",mesh:function(n){return u(n,e.apply(this,arguments))},meshArcs:e,merge:function(n){return u(n,o.apply(this,arguments))},mergeArcs:o,feature:i,neighbors:s,presimplify:l};"function"==typeof define&&define.amd?define(M):"object"==typeof r&&r.exports?r.exports=M:this.topojson=M}()},{}]},{},[1]);